services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod.cn
    container_name: v0-sandbox-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./data/prod.db
      - DIFY_API_KEY=${DIFY_API_KEY:-}
      - DIFY_API_ENDPOINT=${DIFY_API_ENDPOINT:-}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL:-}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY:-}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY:-}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-secret-key}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:3000}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - v0-sandbox-network

  # 使用国内镜像源的 Redis
  redis:
    image: registry.cn-hangzhou.aliyuncs.com/public/redis:7-alpine
    container_name: v0-sandbox-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - v0-sandbox-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 使用国内镜像源的 Nginx
  nginx:
    image: registry.cn-hangzhou.aliyuncs.com/public/nginx:alpine
    container_name: v0-sandbox-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - v0-sandbox-network

volumes:
  redis_data:
    driver: local

networks:
  v0-sandbox-network:
    driver: bridge
