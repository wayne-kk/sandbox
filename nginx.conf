events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 日志格式（不变）
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # 基本设置（不变）
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # 缓冲设置（不变）
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
    proxy_temp_file_write_size 8k;
    proxy_max_temp_file_size 1024m;
    
    # 超时设置（不变）
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    send_timeout 60s;

    # Gzip 压缩（不变）
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器配置（不变）
    upstream main_app {
        server app:3000;
        keepalive 32;
    }

    upstream sandbox_app {
        server sandbox:3100;
        keepalive 32;
    }

    # 主服务器配置
    # 主应用服务器 - wayne.beer 和 www.wayne.beer (HTTP)
    server {
        listen 80;
        server_name wayne.beer www.wayne.beer;
        
        # HTTP 重定向到 HTTPS
        return 301 https://$server_name$request_uri;
    }

    # 主应用服务器 - wayne.beer 和 www.wayne.beer (HTTPS)
    server {
        listen 443 ssl http2;
        server_name wayne.beer www.wayne.beer;
        
        # SSL 配置（使用 Let's Encrypt 或自签名证书）
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # 健康检查端点（不变）
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 调试端点 - 显示主应用信息
        location /debug {
            access_log off;
            return 200 "wayne.beer - 主应用 (main_app)\n";
            add_header Content-Type text/plain;
        }

        # 主项目 WebSocket HMR 路由（不变）
        location /_next/webpack-hmr {
            proxy_pass http://main_app/_next/webpack-hmr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Sandbox WebSocket HMR 路由（修正为 /sandbox/ 前缀，并添加 WebSocket 支持）
        location /sandbox/_next/webpack-hmr {
            proxy_pass http://sandbox_app/_next/webpack-hmr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Sandbox 静态资源 - 处理 /sandbox/_next/ 路径（添加缓存头，无需 WebSocket 因为 HMR 已单独处理）
        location /sandbox/_next/ {
            proxy_pass http://sandbox_app/_next/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 添加缓存头
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # 主项目静态资源 - 处理 /_next/ 路径（不变）
        location /_next/ {
            proxy_pass http://main_app/_next/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 添加缓存头
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Sandbox API 路由 - 处理 /sandbox/api/ 路径（不变，但确保与 basePath 匹配）
        location /sandbox/api/ {
            proxy_pass http://sandbox_app/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Sandbox 项目路由 - 支持动态路由（rewrite 移除 /sandbox/ 前缀）
        location /sandbox/ {
            rewrite ^/sandbox/(.*)$ /$1 break;
            proxy_pass http://sandbox_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # iframe 相关配置（不变）
            proxy_hide_header X-Frame-Options;
            proxy_hide_header Content-Security-Policy;
            add_header X-Frame-Options SAMEORIGIN always;
        }

        # 主应用路由（不变）
        location / {
            proxy_pass http://main_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 增强的缓冲和超时设置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # API 路由（不变）
        location /api/ {
            proxy_pass http://main_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 增强的缓冲和超时设置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # WebSocket 支持（不变）
        location /ws/ {
            proxy_pass http://main_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # 移除原静态文件缓存 location（因为它会干扰 _next/ 路径；缓存已在 /_next/ 和 /sandbox/_next/ 中处理）
        # 如果你有其他非 _next/ 的静态文件需求，可添加特定路径如 location /static/ { ... }

        # 错误页面（不变）
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Sandbox 应用服务器 - sandbox.wayne.beer (HTTP)
    server {
        listen 80;
        server_name sandbox.wayne.beer;
        
        # HTTP 重定向到 HTTPS
        return 301 https://$server_name$request_uri;
    }

    # Sandbox 应用服务器 - sandbox.wayne.beer (HTTPS)
    server {
        listen 443 ssl http2;
        server_name sandbox.wayne.beer;
        
        # SSL 配置（使用 Let's Encrypt 或自签名证书）
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        
        # 添加错误处理，确保不会fallback到其他server
        error_page 404 = @sandbox_fallback;
        
        # 健康检查端点
        location /health {
            access_log off;
            return 200 "sandbox healthy\n";
            add_header Content-Type text/plain;
        }

        # 调试端点 - 显示当前配置信息
        location /debug {
            access_log off;
            return 200 "sandbox.wayne.beer - 代理到 sandbox_app (sandbox:3100)\n";
            add_header Content-Type text/plain;
        }

        # 直接代理到 sandbox 应用（开发模式）
        location / {
            proxy_pass http://sandbox_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # iframe 相关配置
            proxy_hide_header X-Frame-Options;
            proxy_hide_header Content-Security-Policy;
            add_header X-Frame-Options SAMEORIGIN always;
        }

        # Sandbox 静态资源（开发模式直接使用 /_next/）
        location /_next/ {
            proxy_pass http://sandbox_app/_next/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # 开发模式不设置长期缓存
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
        }

        # Sandbox WebSocket HMR
        location /_next/webpack-hmr {
            proxy_pass http://sandbox_app/_next/webpack-hmr;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # 错误页面
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # Sandbox fallback 处理
        location @sandbox_fallback {
            return 200 "sandbox.wayne.beer - 代理到 sandbox_app (sandbox:3100)\n";
            add_header Content-Type text/plain;
        }
    }

    # SSL 配置（可选，不变）
    # ...
}