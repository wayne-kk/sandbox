version: "3.8"

services:
  # 主项目 - V0-Sandbox Platform
  main-app:
    build:
      context: .
      dockerfile: Dockerfile.main
    container_name: v0-sandbox-main
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./data/prod.db
      - DIFY_API_KEY=${DIFY_API_KEY}
      - DIFY_API_ENDPOINT=${DIFY_API_ENDPOINT}
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
      - sandbox-projects:/app/sandbox-projects
    restart: unless-stopped
    networks:
      - v0-sandbox-network
    depends_on:
      - redis

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: v0-sandbox-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - v0-sandbox-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: v0-sandbox-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    restart: unless-stopped
    networks:
      - v0-sandbox-network
    depends_on:
      - main-app

volumes:
  redis_data:
    driver: local
  sandbox-projects:
    driver: local

networks:
  v0-sandbox-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
